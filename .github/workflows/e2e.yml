name: Nightly E2E Tests

on:
  schedule:
    - cron: '0 3 * * *'  # Run nightly at 03:00 UTC
  workflow_dispatch: {}
  push:
    paths:
      - '.github/workflows/e2e.yml'

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: write

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v5
      - name: Set up Go
        uses: actions/setup-go@v5
      - name: GitHub CLI - show auth status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh auth status
      - name: Run e2e tests and publish output to job summary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        timeout-minutes: 60
        run: |
          set -o pipefail
          chmod +x ./e2e.sh

          # Run the e2e script, tee output to both stdout and log file, capture exit code
          # Using set +e to prevent immediate exit on script failure so we can capture exit code
          set +e
          ./e2e.sh 2>&1 | tee e2e-output.log
          script_exit_code=${PIPESTATUS[0]}
          set -e

          echo -e "\n## E2E test run output" >> "$GITHUB_STEP_SUMMARY"
          echo '```bash' >> "$GITHUB_STEP_SUMMARY"
          sed -n '1,50000p' e2e-output.log >> "$GITHUB_STEP_SUMMARY" || true
          echo '```' >> "$GITHUB_STEP_SUMMARY"

          echo "Detailed log attached as artifact: e2e-output.log"

          # Exit with the same code as the e2e script to preserve test result status
          if [[ $script_exit_code -ne 0 ]]; then
            echo "E2E script failed with exit code $script_exit_code"
            exit $script_exit_code
          else
            echo "E2E script completed successfully"
          fi
      - name: Upload e2e log artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-output-log
          path: e2e-output.log
